<ResourceDictionary x:Class="MinimalisticView.StyleOverrides" x:ClassModifier="public"
										xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
										xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
										xmlns:local="clr-namespace:MinimalisticView"
										xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
										xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI.Shell.Controls;assembly=Microsoft.VisualStudio.Shell.ViewManager"
										xmlns:ui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
										xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.PlatformUI.Shell;assembly=Microsoft.VisualStudio.Shell.ViewManager"
										xmlns:vsinternal="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.UI.Internal">
	<!-- Just squash everything to 0 height to avoid breaking stuff -->
	<!-- This is almost unchanged source style -->
	<Style TargetType="{x:Type vs:DocumentGroupControl}">
    <Style.Resources>
      <vs:MenuItemIconConverter x:Key="MenuItemIconConverter"/>
			<ui:BooleanToHiddenVisibilityConverter x:Key="BooleanToHiddenVisibilityConverter"/>
		</Style.Resources>
		<Setter Property="InputMethod.IsInputMethodSuspended" Value="true"/>
		<!-- Changed to specific color because I don't know how to apply theme color -->
		<Setter Property="Control.BorderBrush" Value="#3f3f46"/>
		<Setter Property="Control.Background" Value="White"/>
		<Setter Property="Control.BorderThickness" Value="1"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type vs:DocumentGroupControl}">
					<vs:DockTarget x:Name="MainDockTarget" DockSiteType="NonDraggable" DockTargetType="Inside"
												 Background="Transparent">
						<DockPanel SnapsToDevicePixels="true">
							<Grid KeyboardNavigation.TabNavigation="Local">
								<Grid.ColumnDefinitions>
									<ColumnDefinition x:Uid="TabsColumn" Width="*"/>
									<ColumnDefinition x:Uid="OverflowColumn" Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<!-- Changed from auto to 0 -->
									<RowDefinition x:Uid="TabsRow" Height="0"/>
									<RowDefinition x:Uid="ContentRow" Height="*"/>
								</Grid.RowDefinitions>
								<vs:DockTarget x:Name="InsertTabPreviewDockTarget" DockTargetType="InsertTabPreview" Grid.Column="0" Grid.Row="0"
															 Background="White" AdornmentTarget="{Binding ElementName=MainDockTarget}">
									<vs:DocumentTabPanel x:Name="PART_TabPanel" ZIndex="1" KeyboardNavigation.TabIndex="1" Margin="2,2,2,0"
																			 IsItemsHost="true" ExpandedTearOffMargin="50"/>
								</vs:DockTarget>
                <DockPanel Margin="0,0,0,3" LastChildFill="false" Grid.Row="0" Grid.Column="1">
                </DockPanel>
								<Border x:Name="PART_ContentPanel" Background="{TemplateBinding Control.Background}"
												BorderThickness="{TemplateBinding Control.BorderThickness}"
												BorderBrush="{TemplateBinding Control.BorderBrush}" KeyboardNavigation.TabNavigation="Local"
												KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2"
												Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2">
									<ContentPresenter x:Name="PART_SelectedContentHost"
																		SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
																		Margin="{TemplateBinding Control.Padding}" ContentSource="SelectedContent"/>
								</Border>
							</Grid>
						</DockPanel>
					</vs:DockTarget>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsEnabled" Value="false">
							<Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
						</Trigger>
						<DataTrigger Value="True"
												 Binding="{Binding Source={x:Static vsshell:ViewManager.Instance}, Path=Preferences.AllowDocumentTabAutoDocking}">
							<Setter TargetName="InsertTabPreviewDockTarget" Property="vs:DockTarget.DockTargetType" Value="Auto"/>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsControl.ItemTemplate"
						Value="{DynamicResource {x:Static vs:DocumentGroupControl.ItemTemplateKey}}"/>
	</Style>
</ResourceDictionary>